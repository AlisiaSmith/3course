import string;
import ds/tree;

mypairs(i:int, a:[int], m:int) -> [Pair<int, int>]
{
    t = foldi(a, makeTree(), 
            \index, tree, x->
                setTree(tree, x, arrayPush(getTreeArrayValue(tree, x), index)));
    map(getTreeArrayValue(t, m-a[i]), \id->Pair(i, id))
}

inds(a:[int], m:int) -> [Pair<int, int>]
{
    indsr(a,0,m);
}

indsr(a:[int], i: int, m: int) -> [Pair<int, int>]
{
    if(i >= length(a)) []
    else concat(mypairs(i,a,m), indsr(a, i+1, m));
}


main()
{
    //ints = [3,1,4,1,5,9,2,6];
    ints = [1,1,1,1,5,5,5,5];
    println(inds(ints, 6));
    quit(0);
}